---
swagger: "2.0"
info:
  description: "Manage participant's favorite passengers informations."
  version: "1.0"
  title: "Favorite Passenger API"
host: "localhost:8080"
basePath: "/favoritepassenger_API/1.0.0"
tags:
- name: "Find"
- name: "Insert"
- name: "Update"
- name: "Delete"
- name: "API"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /members/{idMember}/favorite_passengers:
    get:
      tags:
      - "Find"
      summary: "Find favorite passengers by member's id"
      description: "Find favorite passengers by his member's id."
      operationId: "findByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "Member id."
        required: true
        type: "string"
      - name: "numberDoc"
        in: "query"
        description: "Favorite passenger`s document number."
        required: false
        type: "string"
      responses:
        200:
          description: "Success finding the favorite passengers."
          schema:
            $ref: "#/definitions/Passengers"
        400:
          description: "Invalid search"
        401:
          description: "Search not authorized"
        404:
          description: "Passenger not found"
        500:
          description: "Internal error finding a passenger."
      x-swagger-router-controller: "Find"
    post:
      tags:
      - "Insert"
      summary: "Insert member's favorite passengers."
      description: "Register a new member's favorite passenger."
      operationId: "insertFavoritePassenger"
      parameters:
      - name: "idMember"
        in: "path"
        description: "Member id."
        required: true
        type: "string"
      - in: "body"
        name: "favoritePassenger"
        required: true
        schema:
          $ref: "#/definitions/Passenger"
      responses:
        201:
          description: "Success to register a new favorite passenger."
          schema:
            $ref: "#/definitions/Passenger"
          headers:
            Location:
              type: "string"
              description: "passenger's registered URI."
        400:
          description: "Invalid insert."
        401:
          description: "Insert not authorized."
        500:
          description: "Internal error to register favorite passenger."
      x-swagger-router-controller: "Insert"
  /members/{idMember}/favorite_passengers/{id}:
    get:
      tags:
      - "Find"
      summary: "Find an existing favorite passenger by Id"
      description: "Find an existing favorite passenger by member's id and it's Id"
      operationId: "findPassengerById"
      parameters:
      - name: "idMember"
        in: "path"
        description: "Member id."
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Favorite passenger's id."
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Found an existing passenger."
          schema:
            $ref: "#/definitions/Passenger"
        400:
          description: "Invalid search."
        401:
          description: "Search not authorized."
        404:
          description: "Favorite passenger not found"
        500:
          description: "Internal error finding an existing passenger."
      x-swagger-router-controller: "Find"
    put:
      tags:
      - "Update"
      summary: "Update an existing favorite passenger"
      description: "Updates a member's favorite passenger."
      operationId: "updateFavoritePassenger"
      parameters:
      - name: "idMember"
        in: "path"
        description: "Member id."
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Favorite passenger's id."
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "favoritePassenger"
        required: false
        schema:
          $ref: "#/definitions/Passenger"
      responses:
        202:
          description: "Success updating an existing favorite passenger."
          schema:
            $ref: "#/definitions/Passenger"
          headers:
            Location:
              type: "string"
              description: "Passenger's updated URI."
        400:
          description: "Invalid update."
        401:
          description: "Update not authorized."
        500:
          description: "Internal error to update favorite passenger."
      x-swagger-router-controller: "Update"
    delete:
      tags:
      - "Delete"
      summary: "Delete a favorite passenger."
      description: "Delete an existing favorite passenger."
      operationId: "deleteFavoritePassenger"
      parameters:
      - name: "idMember"
        in: "path"
        description: "Member id."
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Favorite passenger's id."
        required: true
        type: "integer"
        format: "int32"
      responses:
        204:
          description: "Success deleting a favorite passenger."
        400:
          description: "Invalid delete."
        401:
          description: "Delete not authorized"
        500:
          description: "Internal error deleting a favorite passenger."
      x-swagger-router-controller: "Delete"
  /readme:
    get:
      tags:
      - "API"
      summary: "Retrieve readme."
      description: "Retrieve API readme."
      operationId: "readme"
      parameters: []
      responses:
        200:
          description: "Sucess."
        500:
          description: "Internal server error."
      x-swagger-router-controller: "API"
definitions:
  Passengers:
    type: "array"
    items:
      $ref: "#/definitions/Passenger"
  Passenger:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "Favorite pax identifier."
      idMember:
        type: "integer"
        format: "int32"
        description: "Member's identifier."
      firstName:
        type: "string"
        description: "Favorite passenger first name."
      lastName:
        type: "string"
        description: "Favorite passenger last name."
      birthDate:
        type: "string"
        format: "date"
        description: "Favorite passenger's birth date."
      gender:
        type: "string"
        description: "Favorite passenger gender."
      email:
        type: "string"
        description: "Favorite passenger email."
      documents:
        type: "array"
        items:
          $ref: "#/definitions/Document"
      createdAt:
        type: "string"
        format: "date-time"
        description: "Favorite passenger creation date."
      updatedAt:
        type: "string"
        format: "date-time"
        description: "Favorite pasenger last update."
      status:
        type: "boolean"
        description: "Favorite passenger status. Active or inactive."
    example:
      firstName: "firstName"
      lastName: "lastName"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      gender: "gender"
      documents:
      - issuingCountry: "issuingCountry"
        numberDoc: "numberDoc"
        tipodoc: "tipodoc"
        expirationDate: "2000-01-23"
      - issuingCountry: "issuingCountry"
        numberDoc: "numberDoc"
        tipodoc: "tipodoc"
        expirationDate: "2000-01-23"
      idMember: 6
      id: 0
      birthDate: "2000-01-23"
      email: "email"
      updatedAt: "2000-01-23T04:56:07.000+00:00"
      status: true
  Document:
    type: "object"
    properties:
      tipodoc:
        type: "string"
        description: "Favorite passenger document type."
      numberDoc:
        type: "string"
        description: "Favorite passenger document number."
      expirationDate:
        type: "string"
        format: "date"
        description: "Favorite passenger document expiration date."
      issuingCountry:
        type: "string"
        description: "Favorite passenger issuing country"
    example:
      issuingCountry: "issuingCountry"
      numberDoc: "numberDoc"
      tipodoc: "tipodoc"
      expirationDate: "2000-01-23"
